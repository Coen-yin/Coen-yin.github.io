name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    environment: github-pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Build site with API key injection
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        run: |
          # Create build directory
          mkdir -p build
          
          # Copy all files to build directory
          cp -r * build/ 2>/dev/null || true
          
          # Remove .git and .github from build directory if they exist
          rm -rf build/.git build/.github 2>/dev/null || true
          
          # Replace the placeholder with actual API key
          if [ -z "$GROQ_API_KEY" ]; then
            echo "Error: GROQ_API_KEY secret is not set"
            exit 1
          fi
          
          # Replace the placeholder in script.js
          sed -i "s/{{GROQ_API_KEY}}/$GROQ_API_KEY/g" build/script.js
          
          # Verify the replacement worked
          if grep -q "{{GROQ_API_KEY}}" build/script.js; then
            echo "Error: API key placeholder was not replaced"
            exit 1
          fi
          
          echo "API key successfully injected into build"
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4